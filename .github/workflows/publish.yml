name: Publish to PyPI

on:
  push:
    tags:
      - "v*.*.*"  # e.g. v0.2.1

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Debug tree
        run: |
          pwd
          ls -la
          find . -maxdepth 3 -type f -name package.json -o -name index.html || true
          find . -maxdepth 3 -type d -name dist || true

      # Detect where the frontend lives OR if a prebuilt ./dist exists at repo root
      - name: Locate frontend / dist
        id: locate
        run: |
          if [ -f package.json ]; then
            echo "WEB_DIR=." >> $GITHUB_ENV
            echo "Found package.json at repo root"
          elif [ -f web/package.json ]; then
            echo "WEB_DIR=web" >> $GITHUB_ENV
            echo "Found package.json in web/"
          elif [ -f saterys/web/package.json ]; then
            echo "WEB_DIR=saterys/web" >> $GITHUB_ENV
            echo "Found package.json in saterys/web/"
          else
            echo "WEB_DIR=" >> $GITHUB_ENV
            echo "No package.json found"
          fi

          # If no WEB_DIR but root ./dist exists, use it as prebuilt artifacts
          if [ -z "${WEB_DIR}" ] && [ -f dist/index.html ]; then
            echo "DIST_DIR=dist" >> $GITHUB_ENV
            echo "Using prebuilt ./dist at repo root"
          elif [ -n "${WEB_DIR}" ]; then
            echo "DIST_DIR=${WEB_DIR}/dist" >> $GITHUB_ENV
          else
            echo "DIST_DIR=" >> $GITHUB_ENV
          fi

      - name: Set up Node (only if we have a frontend to build)
        if: env.WEB_DIR != ''
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ${{ env.WEB_DIR }}/package-lock.json

      - name: Build Svelte frontend (only if WEB_DIR set)
        if: env.WEB_DIR != ''
        working-directory: ${{ env.WEB_DIR }}
        run: |
          npm ci
          npm run build

      - name: Copy frontend into package
        run: |
          mkdir -p saterys/static

          if [ -n "${DIST_DIR}" ] && [ -f "${DIST_DIR}/index.html" ]; then
            # copy everything (keeps subdirs, preserves timestamps)
            rsync -a "${DIST_DIR}/" saterys/static/
          else
            echo "❌ No dist found. Either:"
            echo "   - have a frontend and let CI build it (ensure package.json exists), OR"
            echo "   - commit or upload a prebuilt ./dist with index.html at repo root."
            exit 1
          fi

          # final check
          test -f saterys/static/index.html || {
            echo '❌ saterys/static/index.html missing after copy'
            exit 1
          }

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Build wheel/sdist
        run: |
          python -m pip install --upgrade pip build twine
          rm -rf dist build *.egg-info
          python -m build
          ls -lh dist

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m twine upload --non-interactive dist/*
